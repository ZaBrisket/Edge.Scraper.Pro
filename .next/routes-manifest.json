{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:file((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+)/",
      "destination": "/:file",
      "internal": true,
      "missing": [
        {
          "type": "header",
          "key": "x-nextjs-data"
        }
      ],
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+))/$"
    },
    {
      "source": "/:notfile((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+)",
      "destination": "/:notfile/",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+))$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/scrape/cancel/[id]",
      "regex": "^/api/scrape/cancel/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/scrape/cancel/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/scrape/download/[id]",
      "regex": "^/api/scrape/download/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/scrape/download/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/scrape/status/[id]",
      "regex": "^/api/scrape/status/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/scrape/status/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/tasks/status/[jobId]",
      "regex": "^/api/tasks/status/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPjobId": "nxtPjobId"
      },
      "namedRegex": "^/api/tasks/status/(?<nxtPjobId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/targets/[id]/preview",
      "regex": "^/targets/([^/]+?)/preview(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/targets/(?<nxtPid>[^/]+?)/preview(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/scrape",
      "regex": "^/scrape(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/scrape(?:/)?$"
    },
    {
      "page": "/scrape/companies",
      "regex": "^/scrape/companies(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/scrape/companies(?:/)?$"
    },
    {
      "page": "/scrape/news",
      "regex": "^/scrape/news(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/scrape/news(?:/)?$"
    },
    {
      "page": "/scrape/sports",
      "regex": "^/scrape/sports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/scrape/sports(?:/)?$"
    },
    {
      "page": "/targets/new",
      "regex": "^/targets/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/targets/new(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}